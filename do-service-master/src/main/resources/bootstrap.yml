server:
  port: ${PORT:8087}
  servlet:
    context-path: /do

spring:
  application:
    name: ${application.name}
  messages:
    basename: i18n/messages
    encoding: UTF-8
  aop:
    proxy-target-class: true
  mvc:
    locale: en_US
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 60MB
  datasource:
    driver-class-name: org.postgresql.Driver
    platform: postgres
    type: com.mchange.v2.c3p0.ComboPooledDataSource
    tomcat:
      validation-query: SELECT 1
      initial-size: 10
      max-active: 100
      max-idle: 20
      max-wait: 3000
      test-while-idle: true
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
#    database-platform: org.hibernate.spatial.dialect.postgis.PostgisDialect
    database: POSTGRESQL
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        temp:
          use_jdbc_metadata_defaults: false
        show_sql: true
    show-sql: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

eureka:
  client:
    enabled: false

feign:
  compression:
    request:
      enabled: true
    response:
      enabled: true
  hystrix:
    enabled: true
  client:
    config:
      do-file:
        connectTimeout: 30000
        readTimeout: 30000
        loggerLevel: full
        errorDecoder: com.dongkap.feign.decoder.FeignErrorDecoder
      do-profile:
        connectTimeout: 30000
        readTimeout: 30000
        loggerLevel: full
        errorDecoder: com.dongkap.feign.decoder.FeignErrorDecoder
      do-security:
        connectTimeout: 30000
        readTimeout: 30000
        loggerLevel: full
        errorDecoder: com.dongkap.feign.decoder.FeignErrorDecoder

hystrix:
  shareSecurityContext: true
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 30000
    do-file:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 30000
    do-profile:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 30000
    do-security:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 30000

ribbon:
  eureka:
    enabled: false

do-file:
  ribbon:
    ReadTimeout: 30000
    MaxAutoRetries: 3
    OkToRetryOnAllOperations: false
    listOfServers: localhost:8085

do-profile:
  ribbon:
    ReadTimeout: 30000
    MaxAutoRetries: 3
    OkToRetryOnAllOperations: false
    listOfServers: localhost:8085

do-security:
  ribbon:
    ReadTimeout: 30000
    MaxAutoRetries: 3
    OkToRetryOnAllOperations: false
    listOfServers: localhost:8085

security:
  oauth2:
    client:
      client-id: do-core
      client-secret: secretdo01
      access-token-uri: http://localhost:8086/do/oauth/token
    resource:
      filter-order: 3
      jwt:
        key-value: CfZKBe7IZHxBCgH9Dz49
      prefer-token-info: true
      token-info-uri: http://localhost:8086/do/oauth/check_token

---
spring:
  profiles: non-config
  cloud:
    inetutils:
      ignored-interfaces:
      - eth0
      - eth1
      - eth2
      - lo
    discovery:
      enabled: false
    config:
      enabled: false
      discovery:
        enabled: false
      fail-fast: true
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}

---
spring:
  profiles: local
  cloud:
    inetutils:
      ignored-interfaces:
      - eth0
      - eth1
      - eth2
      - lo
    config:
      discovery:
        enabled: false
      fail-fast: true
      uri: ${SPRING_CONFIG_URI:http://localhost:8888}

---
spring:
  profiles: heroku
  cloud:
    inetutils:
      ignored-interfaces:
      - eth0
      - eth1
      - eth2
      - lo
    config:
      discovery:
        enabled: false
      fail-fast: true
      uri: ${SPRING_CONFIG_URI:https://do-service-config.herokuapp.com}